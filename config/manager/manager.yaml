apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: pr-controller
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: pr
    app.kubernetes.io/part-of: pr
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: pr-controller
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: pr-controller
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: pr
    app.kubernetes.io/part-of: pr
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: pr-controller
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: controller
      labels:
        control-plane: pr-controller
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - image: controller:latest
        name: controller
        args:
          - run
          - --bind-address
          - 0.0.0.0
        env:
          - name: GITLAB_SHARED_SECRET
            valueFrom:
              secretKeyRef:
                key: shared-secret
                name: pr-gitlab-secret
          - name: GITHUB_SHARED_SECRET
            valueFrom:
              secretKeyRef:
                key: shared-secret
                name: pr-github-secret
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
#        livenessProbe:
#          httpGet:
#            path: /ready
#            port: 8080
#          initialDelaySeconds: 15
#          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 1000m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 128Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: controller
  namespace: system
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    control-plane: pr-controller
